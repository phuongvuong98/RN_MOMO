{"version":3,"file":"Sharing.js","sourceRoot":"","sources":["../src/Sharing.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAEvD,OAAO,OAAO,MAAM,eAAe,CAAC;AAQpC,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,IAAI,OAAO,EAAE;QACX,IAAI,OAAO,CAAC,gBAAgB,EAAE;YAC5B,OAAO,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;SACzC;QACD,OAAO,IAAI,CAAC;KACb;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,GAAW,EAAE,UAAwB,EAAE;IACtE,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;QACnC,MAAM,IAAI,mBAAmB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;KACxD;IACD,OAAO,MAAM,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAChD,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport Sharing from './ExpoSharing';\n\ntype ShareOptions = {\n  mimeType?: string;\n  UTI?: string;\n  dialogTitle?: string;\n};\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (Sharing) {\n    if (Sharing.isAvailableAsync) {\n      return await Sharing.isAvailableAsync();\n    }\n    return true;\n  }\n\n  return false;\n}\n\nexport async function shareAsync(url: string, options: ShareOptions = {}): Promise<{}> {\n  if (!Sharing || !Sharing.shareAsync) {\n    throw new UnavailabilityError('Sharing', 'shareAsync');\n  }\n  return await Sharing.shareAsync(url, options);\n}\n"]}