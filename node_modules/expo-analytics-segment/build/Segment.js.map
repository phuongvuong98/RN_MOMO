{"version":3,"file":"Segment.js","sourceRoot":"","sources":["../src/Segment.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport { UnavailabilityError } from '@unimodules/core';\n\nimport ExponentSegment from './ExponentSegment';\n\nexport type SegmentOptions = {\n  androidWriteKey?: string;\n  iosWriteKey?: string;\n};\n\nexport function initialize(options: SegmentOptions): void {\n  if (Platform.OS === 'android') {\n    ExponentSegment.initializeAndroid(options.androidWriteKey);\n  } else if (Platform.OS === 'ios') {\n    ExponentSegment.initializeIOS(options.iosWriteKey);\n  } else {\n    throw new UnavailabilityError('expo-analytics-segment', 'initialize');\n  }\n}\n\nexport function identify(userId: string): void {\n  if (!ExponentSegment.identify) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identify');\n  }\n  ExponentSegment.identify(userId);\n}\n\nexport function identifyWithTraits(userId: string, traits: { [key: string]: any }): void {\n  if (!ExponentSegment.identifyWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identifyWithTraits');\n  }\n  ExponentSegment.identifyWithTraits(userId, traits);\n}\n\nexport function group(groupId: string): void {\n  if (!ExponentSegment.group) {\n    throw new UnavailabilityError('expo-analytics-segment', 'group');\n  }\n  ExponentSegment.group(groupId);\n}\n\nexport function groupWithTraits(groupId: string, traits: { [key: string]: any }): void {\n  if (!ExponentSegment.groupWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'groupWithTraits');\n  }\n  ExponentSegment.groupWithTraits(groupId, traits);\n}\n\nexport async function alias(newId: string, options?: { [key: string]: any }): Promise<boolean> {\n  if (!ExponentSegment.alias) {\n    throw new UnavailabilityError('expo-analytics-segment', 'alias');\n  }\n  return await ExponentSegment.alias(newId, options);\n}\n\nexport function reset(): void {\n  if (!ExponentSegment.reset) {\n    throw new UnavailabilityError('expo-analytics-segment', 'reset');\n  }\n  ExponentSegment.reset();\n}\n\nexport function track(event: string): void {\n  if (!ExponentSegment.track) {\n    throw new UnavailabilityError('expo-analytics-segment', 'track');\n  }\n  ExponentSegment.track(event);\n}\n\nexport function trackWithProperties(event: string, properties: { [key: string]: any }): void {\n  if (!ExponentSegment.trackWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'trackWithProperties');\n  }\n  ExponentSegment.trackWithProperties(event, properties);\n}\n\nexport function screen(screenName: string): void {\n  if (!ExponentSegment.screen) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screen');\n  }\n  ExponentSegment.screen(screenName);\n}\n\nexport function screenWithProperties(event: string, properties: { [key: string]: any }): void {\n  if (!ExponentSegment.screenWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screenWithProperties');\n  }\n  ExponentSegment.screenWithProperties(event, properties);\n}\n\nexport function flush(): void {\n  if (!ExponentSegment.flush) {\n    throw new UnavailabilityError('expo-analytics-segment', 'flush');\n  }\n  ExponentSegment.flush();\n}\n\nexport async function getEnabledAsync(): Promise<boolean> {\n  if (!ExponentSegment.getEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'getEnabledAsync');\n  }\n  const isEnabledNumber = await ExponentSegment.getEnabledAsync();\n  return !!isEnabledNumber;\n}\n\nexport async function setEnabledAsync(enabled: boolean): Promise<void> {\n  if (!ExponentSegment.setEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'setEnabledAsync');\n  }\n  await ExponentSegment.setEnabledAsync(enabled);\n}\n"]}